{"version":3,"file":"static/js/502.a39c0af6.chunk.js","mappings":"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","sources":["components/MoviePage/MoviePage.styled.jsx","components/MoviePage/MovieDescription/MovieDescription.styled.jsx","components/MoviePage/MovieDescription/MovieDescription.jsx","components/MoviePage/MoviePage.jsx","pages/MovieDetails.jsx","services/api.js","utils/toastError.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link, NavLink } from 'react-router-dom';\n\nexport const BackLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  font-size: 17px;\n  text-decoration: none;\n  padding: 5px 10px;\n  margin-left: 10px;\n  margin-top: 15px;\n\n  color: black;\n  border: 2px solid #42d22f;\n  border-radius: 5px;\n\n  & svg {\n    margin-right: 5px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: #2fd23d;\n    color: #ffffff;\n  }\n`;\n\nexport const MovieImage = styled.img`\n  display: block;\n  width: 300px;\n  height: auto;\n  border-radius: 30px;\n\n  margin-right: 30px;\n`;\nexport const AdditionalInfo = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nexport const StyledNavLink = styled(NavLink)`\n  display: inline-block;\n  font-size: 20px;\n  font-weight: 500;\n\n  text-decoration: none;\n  padding: 5px 13px;\n\n  color: #082504;\n  border-radius: 5px;\n  transition: scale 100ms linear;\n\n  &.active {\n    color: #ffffff;\n    background-color: #096306;\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const FilmName = styled.h1`\n  font-size: 30px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 30px;\n  color: #0a4e04;\n`;\n\nexport const FilmData = styled.p`\n  font-size: 20px;\n  margin: 0;\n  margin-bottom: 30px;\n`;\n\nexport const Genres = styled(FilmData)`\n  margin-bottom: 0;\n`;\n\nexport const Info = styled.p`\n  font-size: 25px;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 30px;\n  color: #06550a;\n`;\n","import { Box } from 'components/Box';\nimport { FilmName, Info, FilmData, Genres } from './MovieDescription.styled';\n\nexport const MovieDescription = ({\n  movie: { original_title, overview, vote_average, genres, release_date },\n}) => {\n  const userScore = `${String(vote_average.toFixed(1)).replace('.', '')}%`;\n  const releaseDate = new Date(release_date).getFullYear();\n\n  return (\n    <Box display=\"flex\" flexDirection=\"column\" pt=\"20px\" pb=\"40px\" pr=\"20px\">\n      <FilmName>{`${original_title} (${releaseDate})`}</FilmName>\n      <FilmData>User score: {userScore}</FilmData>\n      <Info>Overview</Info>\n      <FilmData>{overview}</FilmData>\n      <Info>Genres</Info>\n      <Genres>{genres.map(({ name }) => name).join(' ')}</Genres>\n    </Box>\n  );\n};\n","import { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { BiArrowBack } from 'react-icons/bi';\nimport PropTypes from 'prop-types';\nimport { RotatingLines } from 'react-loader-spinner';\n\nimport { API } from 'services';\nimport {\n  BackLink,\n  MovieImage,\n  AdditionalInfo,\n  StyledNavLink,\n} from './MoviePage.styled';\nimport { MovieDescription } from './MovieDescription';\nimport { Box } from 'components/Box';\nimport { toastError } from 'utils/toastError';\n\nexport const MoviePage = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = location.state?.from || '/';\n\n  useEffect(() => {\n    API.fetchMovieDetails(movieId)\n      .then(setMovie)\n      .catch(error =>\n        toastError('Что-то пошло не так, перезагрузите страницу')\n      );\n  }, [movieId]);\n\n  return (\n    <Box as=\"main\">\n      <BackLink to={backLinkHref}>\n        <BiArrowBack size={18} />\n        Go back\n      </BackLink>\n      <Box display=\"flex\" py=\"15px\" pl=\"20px\" borderBottom=\"3px solid #054d05\">\n        {movie && (\n          <>\n            <MovieImage\n              src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2${movie.poster_path}`}\n              alt={movie.title}\n            />\n            <MovieDescription movie={movie} />\n          </>\n        )}\n      </Box>\n      <Box py=\"20px\" borderBottom=\"3px solid #0c6818\">\n        <AdditionalInfo>Additional Information</AdditionalInfo>\n        <StyledNavLink to=\"cast\" state={{ from: backLinkHref }}>\n          Cast\n        </StyledNavLink>\n        <StyledNavLink to=\"reviews\" state={{ from: backLinkHref }}>\n          Reviews\n        </StyledNavLink>\n      </Box>\n\n      <Suspense\n        fallback={\n          <RotatingLines\n            strokeColor=\"#085f05\"\n            strokeWidth=\"4\"\n            animationDuration=\"0.75\"\n            width=\"70\"\n            visible={true}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Box>\n  );\n};\n\nMovieImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nMovieDescription.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\nStyledNavLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  state: PropTypes.object.isRequired,\n};\n","import { MoviePage } from 'components/MoviePage';\n\nconst MovieDetails = () => {\n  return <MoviePage />;\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = 'aba718389d5889e26f3094dd9f1c0ceb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return await response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchMovieActors = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return await response.data;\n};\n","import { toast } from 'react-toastify';\n\nexport function toastError(message) {\n  return toast.error(`${message}`, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n}\n"],"names":["BackLink","styled","Link","MovieImage","AdditionalInfo","StyledNavLink","NavLink","FilmName","FilmData","Genres","Info","MovieDescription","movie","original_title","overview","vote_average","genres","release_date","userScore","String","toFixed","replace","releaseDate","Date","getFullYear","Box","display","flexDirection","pt","pb","pr","map","name","join","MoviePage","useState","setMovie","movieId","useParams","backLinkHref","useLocation","state","from","useEffect","API","then","catch","error","toastError","as","to","size","py","pl","borderBottom","src","poster_path","alt","title","Suspense","fallback","strokeColor","strokeWidth","animationDuration","width","visible","propTypes","PropTypes","API_KEY","axios","fetchTrendingMovies","response","data","fetchMovieDetails","id","fetchMovieActors","fetchMovieReviews","fetchSearchMovies","query","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}