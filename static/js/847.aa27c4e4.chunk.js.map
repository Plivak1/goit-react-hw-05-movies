{"version":3,"file":"static/js/847.aa27c4e4.chunk.js","mappings":"ySAEaA,EAAcC,EAAAA,EAAAA,GAAH,+KAWXC,EAASD,EAAAA,EAAAA,QAAH,8IASNE,EAAWF,EAAAA,EAAAA,EAAH,gFAMRG,EAAUH,EAAAA,EAAAA,EAAH,0DAKPI,EAAWJ,EAAAA,EAAAA,EAAH,+L,mLCjBRK,EAAU,WACrB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAaH,EAAAA,EAAAA,UAASG,GAAfE,GAAP,eAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,kBAAsBF,GACnBG,MAAK,SAAAC,GACJP,GAAW,OAAIO,EAASC,SACzB,IACAC,OAAM,SAAAC,IACLC,EAAAA,EAAAA,GAAW,qNACZ,GACJ,GAAE,CAACR,KAEJC,EAAAA,EAAAA,YAAU,WACRQ,OAAOC,OAAO,EAAG,IAClB,GAAE,CAACd,KAGF,SAACe,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,GAAG,OAAOC,GAAG,UAAzD,SACsB,IAAnBnB,EAAQoB,QACP,SAAC,KAAD,UACGpB,EAAQqB,KAAI,gBAAGjB,EAAH,EAAGA,GAAIkB,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,OAAhB,OACX,SAACR,EAAA,EAAD,CAEES,aAAa,OACbC,SAAS,SACTC,WAAW,YACXC,gBAAgB,UAChBC,UAAU,wBACVT,GAAG,KAPL,UASE,SAAC,IAAD,CAAWU,MAAO,CAAEC,UAAW,SAAWC,UAAU,EAApD,UACE,UAAC,KAAD,YACE,UAAC,KAAD,sBAAmBR,MACnB,UAAC,KAAD,eAAWD,EAAX,aAXClB,EAFI,OAoBf,SAAC,KAAD,yDAIP,C,uUC7DK4B,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,oGACVD,IAAM,+BAAD,OAAgCD,IAD3B,cAC3BxB,EAD2B,gBAEpBA,EAAS2B,KAFW,mFAAH,qDAKnBC,EAAiB,mCAAG,WAAMhC,GAAN,uFACR6B,IAAM,UAAD,OAChB7B,EADgB,oBACF4B,EADE,oBADG,cACzBxB,EADyB,gBAIlBA,EAAS2B,KAJS,mFAAH,sDAOjBE,EAAgB,mCAAG,WAAMjC,GAAN,uFACP6B,IAAM,UAAD,OAChB7B,EADgB,4BACM4B,EADN,oBADE,cACxBxB,EADwB,gBAIjBA,EAAS2B,KAJQ,mFAAH,sDAOhBG,EAAiB,mCAAG,WAAMlC,GAAN,uFACR6B,IAAM,UAAD,OAChB7B,EADgB,4BACM4B,EADN,oBADG,cACzBxB,EADyB,gBAIlBA,EAAS2B,KAJS,mFAAH,sDAOjBI,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,IAAM,yBAAD,OACDD,EADC,wCACsCQ,IAFnC,cACzBhC,EADyB,gBAIlBA,EAAS2B,KAJS,mFAAH,qD,qEC7BvB,SAASvB,EAAW6B,GACzB,OAAOC,EAAAA,GAAAA,MAAA,UAAeD,GAAW,CAC/BE,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAEb,C","sources":["components/MovieReviews/Reviews.styled.jsx","components/MovieReviews/Reviews.jsx","services/api.js","utils/toastError.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 20px;\n  width: 1000px;\n\n  margin: 0;\n  padding: 20px 20px;\n  border: 4px dotted #2fd237;\n`;\n\nexport const Review = styled.article`\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n\n  padding: 10px 20px;\n  background-color: #f3bbbb;\n`;\n\nexport const Reviewer = styled.p`\n  font-size: 20px;\n  font-weight: bold;\n  margin: 0;\n`;\n\nexport const Comment = styled.p`\n  font-size: 17px;\n  margin: 0;\n`;\n\nexport const NotFound = styled.p`\n  font-size: 25px;\n  padding: 20px 25px;\n  margin: 0;\n  color: #ffffff;\n  background-color: #2fd22f;\n  border-radius: 10px;\n  box-shadow: 0 10px 10px -6px #777;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport SimpleBar from 'simplebar-react';\nimport 'simplebar-react/dist/simplebar.min.css';\n\nimport { API } from 'services';\nimport { Box } from 'components/Box';\nimport {\n  Review,\n  ReviewsList,\n  Reviewer,\n  Comment,\n  NotFound,\n} from './Reviews.styled';\nimport { toastError } from 'utils/toastError';\n\nexport const Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n  const [id] = useState(movieId);\n\n  useEffect(() => {\n    API.fetchMovieReviews(id)\n      .then(response => {\n        setReviews([...response.results]);\n      })\n      .catch(error => {\n        toastError('Что пошло не так, перезагрузите страницу');\n      });\n  }, [id]);\n\n  useEffect(() => {\n    window.scroll(0, 400);\n  }, [reviews]);\n\n  return (\n    <Box display=\"flex\" justifyContent=\"center\" py=\"30px\" as=\"section\">\n      {reviews.length !== 0 ? (\n        <ReviewsList>\n          {reviews.map(({ id, content, author }) => (\n            <Box\n              key={id}\n              borderRadius=\"15px\"\n              overflow=\"hidden\"\n              borderLeft=\"7px solid\"\n              borderLeftColor=\"#d22f2f\"\n              boxShadow=\"0 10px 10px -6px #777\"\n              as=\"li\"\n            >\n              <SimpleBar style={{ maxHeight: '200px' }} autoHide={false}>\n                <Review>\n                  <Reviewer>Author: {author}</Reviewer>\n                  <Comment>'{content}'</Comment>\n                </Review>\n              </SimpleBar>\n            </Box>\n          ))}\n        </ReviewsList>\n      ) : (\n        <NotFound>We don't have any reviews for this movie!</NotFound>\n      )}\n    </Box>\n  );\n};\n","import axios from 'axios';\n\nconst API_KEY = 'aba718389d5889e26f3094dd9f1c0ceb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return await response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchMovieActors = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return await response.data;\n};\n","import { toast } from 'react-toastify';\n\nexport function toastError(message) {\n  return toast.error(`${message}`, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n}\n"],"names":["ReviewsList","styled","Review","Reviewer","Comment","NotFound","Reviews","useState","reviews","setReviews","movieId","useParams","id","useEffect","API","then","response","results","catch","error","toastError","window","scroll","Box","display","justifyContent","py","as","length","map","content","author","borderRadius","overflow","borderLeft","borderLeftColor","boxShadow","style","maxHeight","autoHide","API_KEY","axios","fetchTrendingMovies","data","fetchMovieDetails","fetchMovieActors","fetchMovieReviews","fetchSearchMovies","query","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}