{"version":3,"file":"static/js/59.36aa2deb.chunk.js","mappings":"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","sources":["components/FindMovie/MoviesList/MoviesList.styled.jsx","components/FindMovie/MoviesList/MoviesList.jsx","components/FindMovie/FindMovie.styled.jsx","components/FindMovie/FindMovie.jsx","pages/Movies.jsx","services/api.js","utils/toastError.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const FilmList = styled.ul`\n  max-width: 1400px;\n  display: flex;\n  justify-content: space-between;\n  align-items: stretch;\n  flex-wrap: wrap;\n  gap: 20px;\n\n  margin: 0;\n  padding: 20px 20px;\n  background-color: #ffffff;\n  border: 3px solid black;\n  border-radius: 10px;\n`;\n\nexport const Film = styled.li`\n  display: flex;\n  justify-content: center;\n  flex-basis: calc(100% / 6);\n\n  font-size: 20px;\n  font-weight: 600;\n  border-radius: 10px;\n  transition: background-color 200ms ease-out, scale 200ms ease-out,\n    border 200ms ease-out, width 200ms ease-out;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    background-color: #fdd9d9;\n    outline: 5px solid #279f02;\n    width: 270px;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  row-gap: 10px;\n  padding-top: 10px;\n  text-align: center;\n  color: #19b719;\n  text-decoration: none;\n`;\n\nexport const FilmPoster = styled.img`\n  display: block;\n  width: 100%;\n  height: 250px;\n  border-radius: 10px;\n  object-fit: cover;\n`;\n\nexport const FilmName = styled.p`\n  margin: 0;\n`;\n","import { BsImage } from 'react-icons/bs';\nimport { useLocation } from 'react-router-dom';\n\nimport { Box } from 'components/Box';\nimport {\n  Film,\n  FilmName,\n  FilmList,\n  FilmPoster,\n  StyledLink,\n} from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Box py=\"20px\" pl=\"20px\">\n      <FilmList>\n        {movies.map(({ id, original_title, poster_path }) => (\n          <Film key={id}>\n            <StyledLink to={`/movies/${id}`} state={{ from: location }}>\n              {poster_path ? (\n                <FilmPoster\n                  loading=\"lazy\"\n                  src={`https://www.themoviedb.org/t/p/original${poster_path}`}\n                  alt={original_title}\n                />\n              ) : (\n                <Box\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  justifyContent=\"center\"\n                  bg=\"#a09d9d\"\n                  width=\"100%\"\n                  height=\"250px\"\n                  borderRadius=\"10px\"\n                >\n                  <BsImage size={100} color=\"#1d1b1b\" />\n                </Box>\n              )}\n              <FilmName>{original_title}</FilmName>\n            </StyledLink>\n          </Film>\n        ))}\n      </FilmList>\n    </Box>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n`;\nexport const Input = styled.input`\n  display: inline-block;\n  max-width: 250px;\n  height: 30px;\n  font-size: 22px;\n\n  padding: 8px 5px;\n  color: #d22f2f;\n  outline: none;\n  border: 2px solid #f57979;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  ::placeholder {\n    color: #fa8f8f;\n  }\n  &:focus {\n    outline: 1px solid #d22f2f;\n    border-color: #d22f2f;\n  }\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n\n  padding: 0;\n  color: #ffffff;\n  background-color: #d22f2f;\n  border: none;\n  border-top-right-radius: 10px;\n  border-bottom-right-radius: 10px;\n\n  &:hover {\n    cursor: pointer;\n  }\n`;\n","import { IoMdSearch } from 'react-icons/io';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nimport { toastError } from 'utils/toastError';\nimport { API } from 'services';\nimport { Box } from 'components/Box';\nimport { MoviesList } from './MoviesList';\nimport { Form, Input, SearchBtn } from './FindMovie.styled';\n\nexport const FindMovie = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movie = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    return setQuery(movie);\n  }, [movie]);\n\n  useEffect(() => {\n    if (!movie) {\n      return;\n    }\n    setIsLoading(true);\n    setTimeout(async () => {\n      try {\n        const response = await API.fetchSearchMovies(movie);\n        const movies = response.results;\n        if (movies.length === 0) {\n          setMovies([]);\n          return toastError('Нет фильмов с таким названием');\n        }\n        setMovies([...movies]);\n      } catch (error) {\n        toastError(\n          'Что пошло не так, перезагрузите страницу и попробуйте еще раз'\n        );\n      } finally {\n        setIsLoading(false);\n      }\n    }, 500);\n  }, [movie]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      elements: {\n        movie: { value },\n      },\n    } = e.currentTarget;\n    if (value.trim() === '') {\n      return toastError('Введите что нибудь');\n    }\n    if (value.trim().toLowerCase() === movie.toLowerCase()) {\n      return toastError('Такой же запрос');\n    }\n    setSearchParams(value !== '' ? { query: value.trim() } : {});\n  };\n\n  const handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  return (\n    <Box as=\"main\">\n      <Box py=\"20px\" pl=\"20px\">\n        <Form onSubmit={handleSubmit} autoComplete=\"off\">\n          <Input\n            onChange={handleChange}\n            placeholder=\"Film name\"\n            type=\"text\"\n            name=\"movie\"\n            value={query}\n          />\n          <SearchBtn\n            type=\"submit\"\n            aria-label=\"search button\"\n            disabled={isLoading}\n          >\n            <IoMdSearch size={22} />\n          </SearchBtn>\n        </Form>\n      </Box>\n      <Box>\n        {isLoading ? (\n          <Box pt=\"100px\" pl=\"400px\">\n            <RotatingLines\n              strokeColor=\"#50d22f\"\n              strokeWidth=\"4\"\n              animationDuration=\"0.75\"\n              width=\"70\"\n              visible={true}\n            />\n          </Box>\n        ) : (\n          <>{movies.length !== 0 && <MoviesList movies={movies} />}</>\n        )}\n      </Box>\n    </Box>\n  );\n};\nInput.propTypes = {\n  value: PropTypes.string.isRequired,\n};\n\nSearchBtn.propTypes = {\n  disabled: PropTypes.bool.isRequired,\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","import { FindMovie } from 'components/FindMovie';\n\nconst Movies = () => {\n  return <FindMovie />;\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = 'aba718389d5889e26f3094dd9f1c0ceb';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n  return await response.data;\n};\n\nexport const fetchMovieDetails = async id => {\n  const response = await axios(\n    `/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchMovieActors = async id => {\n  const response = await axios(\n    `/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchMovieReviews = async id => {\n  const response = await axios(\n    `/movie/${id}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return await response.data;\n};\n\nexport const fetchSearchMovies = async query => {\n  const response = await axios(\n    `/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${query}`\n  );\n  return await response.data;\n};\n","import { toast } from 'react-toastify';\n\nexport function toastError(message) {\n  return toast.error(`${message}`, {\n    position: 'top-center',\n    autoClose: 3000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  });\n}\n"],"names":["FilmList","styled","Film","StyledLink","Link","FilmPoster","FilmName","MoviesList","movies","location","useLocation","Box","py","pl","map","id","original_title","poster_path","to","state","from","loading","src","alt","display","alignItems","justifyContent","bg","width","height","borderRadius","size","color","Form","Input","SearchBtn","FindMovie","useState","setMovies","query","setQuery","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","movie","get","useEffect","setTimeout","API","response","results","length","toastError","as","onSubmit","e","preventDefault","value","currentTarget","elements","trim","toLowerCase","autoComplete","onChange","target","placeholder","type","name","disabled","pt","strokeColor","strokeWidth","animationDuration","visible","propTypes","PropTypes","API_KEY","axios","fetchTrendingMovies","data","fetchMovieDetails","fetchMovieActors","fetchMovieReviews","fetchSearchMovies","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined"],"sourceRoot":""}